{{- define "deployment.volumes"}}
{{- if or .Values.volumes.data .Values.volumes.shared }}
volumes:
{{- range $key, $value := .Values.volumes.data }}
  - name: "data-{{$key}}"
    persistentVolumeClaim:
      claimName: "{{$.Release.Name}}-{{$key}}"
{{- end}}
{{- range $key, $value := .Values.volumes.shared }}
  - name: "shared-{{$key}}"
    persistentVolumeClaim:
      claimName: "shared-{{$key}}"
{{- end}}
{{- end}}
{{- end}}



{{- define "deployment.volumeMounts"}}
{{- if or .Values.volumes.data .Values.volumes.shared }}
volumeMounts:
{{- range $key, $value := .Values.volumes.data }}
  - name: "data-{{$key}}"
    mountPath: "{{$value.path}}"
{{- end}}
{{- range $key, $value := .Values.volumes.shared }}
  - name: "shared-{{$key}}"
    mountPath: "{{$value.path}}"
{{- end}}
{{- end}}
{{- end}}



{{- define "deployment.ports"}}
{{- if .Values.ingress }}
ports:
{{- range $key, $value := .Values.ingress }}
  - containerPort: {{$value.containerPort}}
{{- end}}
{{- end}}
{{- end}}



{{- define "deployment.env"}}
{{- if .Values.env }}
env:
{{- range $key, $value := .Values.env }}
  - name: {{$key}}
    value: {{$value | quote }}
{{- end}}
{{- end}}
{{- end}}



{{- $volumes := include "deployment.volumes" . }}
{{- $volumeMounts := include "deployment.volumeMounts" . }}
{{- $ports := include "deployment.ports" . }}
{{- $env := include "deployment.env" . }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Release.Name }}"
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}"
    spec:
      containers:
        - image: "{{ .Values.image }}"
          imagePullPolicy: Always
          name: "{{ .Release.Name }}"
          {{$env | indent 10}}
          {{$ports | indent 10}}
          {{$volumeMounts | indent 10 }}
      {{$volumes | indent 6 }}
